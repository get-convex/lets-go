/* eslint-disable */
/**
 * Generated API.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@0.3.1.
 * To regenerate, run `npx convex codegen`.
 * @module
 */

import type { ApiFromModules } from "convex/browser";
import type * as createAttendee from "../createAttendee";
import type * as createEvent from "../createEvent";
import type * as deleteAttendee from "../deleteAttendee";
import type * as deleteEvent from "../deleteEvent";
import type * as getEvent from "../getEvent";
import type * as getEventByInviteCode from "../getEventByInviteCode";
import type * as getEvents from "../getEvents";
import type * as helpers_asyncFilter from "../helpers/asyncFilter";
import type * as helpers_asyncMap from "../helpers/asyncMap";
import type * as helpers_authenticatedMutation from "../helpers/authenticatedMutation";
import type * as helpers_authenticatedQuery from "../helpers/authenticatedQuery";
import type * as helpers_getCurrentUser from "../helpers/getCurrentUser";
import type * as helpers_notNull from "../helpers/notNull";
import type * as storeUser from "../storeUser";

/**
 * A type describing your app's public Convex API.
 *
 * This `API` type includes information about the arguments and return
 * types of your app's query and mutation functions.
 *
 * This type should be used with type-parameterized classes like
 * `ConvexReactClient` to create app-specific types.
 */
export type API = ApiFromModules<{
  createAttendee: typeof createAttendee;
  createEvent: typeof createEvent;
  deleteAttendee: typeof deleteAttendee;
  deleteEvent: typeof deleteEvent;
  getEvent: typeof getEvent;
  getEventByInviteCode: typeof getEventByInviteCode;
  getEvents: typeof getEvents;
  "helpers/asyncFilter": typeof helpers_asyncFilter;
  "helpers/asyncMap": typeof helpers_asyncMap;
  "helpers/authenticatedMutation": typeof helpers_authenticatedMutation;
  "helpers/authenticatedQuery": typeof helpers_authenticatedQuery;
  "helpers/getCurrentUser": typeof helpers_getCurrentUser;
  "helpers/notNull": typeof helpers_notNull;
  storeUser: typeof storeUser;
}>;
