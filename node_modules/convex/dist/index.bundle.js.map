{
  "version": 3,
  "sources": ["../../common/temp/node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js", "../../common/temp/node_modules/.pnpm/node-fetch@2.6.7_encoding@0.1.13/node_modules/node-fetch/browser.js", "../src/browser/index.ts", "../src/index.ts", "../../@convex-dev/common/src/values.ts", "../../common/temp/node_modules/.pnpm/long@5.2.0/node_modules/long/index.js", "../../@convex-dev/common/src/version.ts", "../../@convex-dev/common/src/index.ts", "../src/browser/sync/udf_path_utils.ts", "../src/browser/sync/local_state.ts", "../src/browser/logging.ts", "../src/browser/sync/mutation_manager.ts", "../src/browser/sync/optimistic_query_set.ts", "../src/browser/sync/remote_query_set.ts", "../src/browser/sync/protocol.ts", "../../common/temp/node_modules/.pnpm/zod@3.17.3/node_modules/zod/lib/index.mjs", "../src/browser/sync/web_socket_manager.ts", "../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js", "../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js", "../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js", "../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js", "../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js", "../src/browser/sync/client.ts", "../src/browser/http_client.ts"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;", "/**\n * Tools for accessing Convex in the browser.\n *\n * **If you are using React, use the {@link react} module instead.**\n *\n * ## Usage\n *\n * Create a {@link ConvexHttpClient} to connect to the Convex Cloud.\n *\n * ```typescript\n * import { ConvexHttpClient } from \"convex/browser\";\n * import convexConfig from \"../convex.json\";\n * const convex = new ConvexHttpClient(convexConfig.origin):\n * ```\n *\n * @module\n */\nexport { InternalConvexClient, ClientOptions } from \"./sync/client.js\";\nexport {\n  OptimisticUpdate,\n  OptimisticLocalStore,\n} from \"./sync/optimistic_query_set.js\";\nexport { QueryResult } from \"./sync/remote_query_set.js\";\nexport { QueryToken } from \"./sync/udf_path_utils.js\";\nexport { ConvexHttpClient, Query, Mutation } from \"./http_client.js\";\nexport * from \"./api.js\";\n", "export const version = \"0.1.6\";\n", null, "/**\n * @license\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// WebAssembly optimizations to do native i64 multiplication and divide\nvar wasm = null;\ntry {\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n  ])), {}).exports;\n} catch (e) {\n  // no wasm support :(\n}\n\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nfunction Long(low, high, unsigned) {\n\n  /**\n   * The low 32 bits as a signed value.\n   * @type {number}\n   */\n  this.low = low | 0;\n\n  /**\n   * The high 32 bits as a signed value.\n   * @type {number}\n   */\n  this.high = high | 0;\n\n  /**\n   * Whether unsigned or not.\n   * @type {boolean}\n   */\n  this.unsigned = !!unsigned;\n}\n\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\n\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n  return (obj && obj[\"__isLong__\"]) === true;\n}\n\n/**\n * @function\n * @param {*} value number\n * @returns {number}\n * @inner\n */\nfunction ctz32(value) {\n  var c = Math.clz32(value & -value);\n  return value ? 31 - c : c;\n}\n\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\nLong.isLong = isLong;\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromInt(value, unsigned) {\n  var obj, cachedObj, cache;\n  if (unsigned) {\n    value >>>= 0;\n    if (cache = (0 <= value && value < 256)) {\n      cachedObj = UINT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, 0, true);\n    if (cache)\n      UINT_CACHE[value] = obj;\n    return obj;\n  } else {\n    value |= 0;\n    if (cache = (-128 <= value && value < 128)) {\n      cachedObj = INT_CACHE[value];\n      if (cachedObj)\n        return cachedObj;\n    }\n    obj = fromBits(value, value < 0 ? -1 : 0, false);\n    if (cache)\n      INT_CACHE[value] = obj;\n    return obj;\n  }\n}\n\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromInt = fromInt;\n\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromNumber(value, unsigned) {\n  if (isNaN(value))\n    return unsigned ? UZERO : ZERO;\n  if (unsigned) {\n    if (value < 0)\n      return UZERO;\n    if (value >= TWO_PWR_64_DBL)\n      return MAX_UNSIGNED_VALUE;\n  } else {\n    if (value <= -TWO_PWR_63_DBL)\n      return MIN_VALUE;\n    if (value + 1 >= TWO_PWR_63_DBL)\n      return MAX_VALUE;\n  }\n  if (value < 0)\n    return fromNumber(-value, unsigned).neg();\n  return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromNumber = fromNumber;\n\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromBits(lowBits, highBits, unsigned) {\n  return new Long(lowBits, highBits, unsigned);\n}\n\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\nLong.fromBits = fromBits;\n\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nfunction fromString(str, unsigned, radix) {\n  if (str.length === 0)\n    throw Error('empty string');\n  if (typeof unsigned === 'number') {\n    // For goog.math.long compatibility\n    radix = unsigned;\n    unsigned = false;\n  } else {\n    unsigned = !!unsigned;\n  }\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n    return unsigned ? UZERO : ZERO;\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n\n  var p;\n  if ((p = str.indexOf('-')) > 0)\n    throw Error('interior hyphen');\n  else if (p === 0) {\n    return fromString(str.substring(1), unsigned, radix).neg();\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 8));\n\n  var result = ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i),\n      value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = fromNumber(pow_dbl(radix, size));\n      result = result.mul(power).add(fromNumber(value));\n    } else {\n      result = result.mul(radixToPower);\n      result = result.add(fromNumber(value));\n    }\n  }\n  result.unsigned = unsigned;\n  return result;\n}\n\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\nLong.fromString = fromString;\n\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nfunction fromValue(val, unsigned) {\n  if (typeof val === 'number')\n    return fromNumber(val, unsigned);\n  if (typeof val === 'string')\n    return fromString(val, unsigned);\n  // Throws for non-objects, converts non-instanceof Long:\n  return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\nLong.fromValue = fromValue;\n\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ZERO = fromInt(0);\n\n/**\n * Signed zero.\n * @type {!Long}\n */\nLong.ZERO = ZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UZERO = fromInt(0, true);\n\n/**\n * Unsigned zero.\n * @type {!Long}\n */\nLong.UZERO = UZERO;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar ONE = fromInt(1);\n\n/**\n * Signed one.\n * @type {!Long}\n */\nLong.ONE = ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar UONE = fromInt(1, true);\n\n/**\n * Unsigned one.\n * @type {!Long}\n */\nLong.UONE = UONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar NEG_ONE = fromInt(-1);\n\n/**\n * Signed negative one.\n * @type {!Long}\n */\nLong.NEG_ONE = NEG_ONE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n\n/**\n * Maximum signed value.\n * @type {!Long}\n */\nLong.MAX_VALUE = MAX_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n\n/**\n * @type {!Long}\n * @inner\n */\nvar MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n\n/**\n * Minimum signed value.\n * @type {!Long}\n */\nLong.MIN_VALUE = MIN_VALUE;\n\n/**\n * @alias Long.prototype\n * @inner\n */\nvar LongPrototype = Long.prototype;\n\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toInt = function toInt() {\n  return this.unsigned ? this.low >>> 0 : this.low;\n};\n\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.toNumber = function toNumber() {\n  if (this.unsigned)\n    return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\n  return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n};\n\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nLongPrototype.toString = function toString(radix) {\n  radix = radix || 10;\n  if (radix < 2 || 36 < radix)\n    throw RangeError('radix');\n  if (this.isZero())\n    return '0';\n  if (this.isNegative()) { // Unsigned Longs are never negative\n    if (this.eq(MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = fromNumber(radix),\n        div = this.div(radixLong),\n        rem1 = div.mul(radixLong).sub(this);\n      return div.toString(radix) + rem1.toInt().toString(radix);\n    } else\n      return '-' + this.neg().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n    rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.div(radixToPower),\n      intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n      digits = intval.toString(radix);\n    rem = remDiv;\n    if (rem.isZero())\n      return digits + result;\n    else {\n      while (digits.length < 6)\n        digits = '0' + digits;\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nLongPrototype.getHighBits = function getHighBits() {\n  return this.high;\n};\n\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n  return this.high >>> 0;\n};\n\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nLongPrototype.getLowBits = function getLowBits() {\n  return this.low;\n};\n\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n  return this.low >>> 0;\n};\n\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n  if (this.isNegative()) // Unsigned Longs are never negative\n    return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n  var val = this.high != 0 ? this.high : this.low;\n  for (var bit = 31; bit > 0; bit--)\n    if ((val & (1 << bit)) != 0)\n      break;\n  return this.high != 0 ? bit + 33 : bit + 1;\n};\n\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isZero = function isZero() {\n  return this.high === 0 && this.low === 0;\n};\n\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\nLongPrototype.eqz = LongPrototype.isZero;\n\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isNegative = function isNegative() {\n  return !this.unsigned && this.high < 0;\n};\n\n/**\n * Tests if this Long's value is positive or zero.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isPositive = function isPositive() {\n  return this.unsigned || this.high >= 0;\n};\n\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isOdd = function isOdd() {\n  return (this.low & 1) === 1;\n};\n\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nLongPrototype.isEven = function isEven() {\n  return (this.low & 1) === 0;\n};\n\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.equals = function equals(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n    return false;\n  return this.high === other.high && this.low === other.low;\n};\n\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.eq = LongPrototype.equals;\n\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.notEquals = function notEquals(other) {\n  return !this.eq(/* validates */ other);\n};\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.neq = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ne = LongPrototype.notEquals;\n\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThan = function lessThan(other) {\n  return this.comp(/* validates */ other) < 0;\n};\n\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lt = LongPrototype.lessThan;\n\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n  return this.comp(/* validates */ other) <= 0;\n};\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.le = LongPrototype.lessThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThan = function greaterThan(other) {\n  return this.comp(/* validates */ other) > 0;\n};\n\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gt = LongPrototype.greaterThan;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n  return this.comp(/* validates */ other) >= 0;\n};\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\n\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\n\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.compare = function compare(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  if (this.eq(other))\n    return 0;\n  var thisNeg = this.isNegative(),\n    otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg)\n    return -1;\n  if (!thisNeg && otherNeg)\n    return 1;\n  // At this point the sign bits are the same\n  if (!this.unsigned)\n    return this.sub(other).isNegative() ? -1 : 1;\n  // Both are positive if at least one is unsigned\n  return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\n};\n\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nLongPrototype.comp = LongPrototype.compare;\n\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nLongPrototype.negate = function negate() {\n  if (!this.unsigned && this.eq(MIN_VALUE))\n    return MIN_VALUE;\n  return this.not().add(ONE);\n};\n\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\nLongPrototype.neg = LongPrototype.negate;\n\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nLongPrototype.add = function add(addend) {\n  if (!isLong(addend))\n    addend = fromValue(addend);\n\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = addend.high >>> 16;\n  var b32 = addend.high & 0xFFFF;\n  var b16 = addend.low >>> 16;\n  var b00 = addend.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 + b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.subtract = function subtract(subtrahend) {\n  if (!isLong(subtrahend))\n    subtrahend = fromValue(subtrahend);\n  return this.add(subtrahend.neg());\n};\n\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nLongPrototype.sub = LongPrototype.subtract;\n\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.multiply = function multiply(multiplier) {\n  if (this.isZero())\n    return this;\n  if (!isLong(multiplier))\n    multiplier = fromValue(multiplier);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = wasm[\"mul\"](this.low,\n      this.high,\n      multiplier.low,\n      multiplier.high);\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (multiplier.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  if (this.eq(MIN_VALUE))\n    return multiplier.isOdd() ? MIN_VALUE : ZERO;\n  if (multiplier.eq(MIN_VALUE))\n    return this.isOdd() ? MIN_VALUE : ZERO;\n\n  if (this.isNegative()) {\n    if (multiplier.isNegative())\n      return this.neg().mul(multiplier.neg());\n    else\n      return this.neg().mul(multiplier).neg();\n  } else if (multiplier.isNegative())\n    return this.mul(multiplier.neg()).neg();\n\n  // If both longs are small, use float multiplication\n  if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\n    return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n\n  // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high >>> 16;\n  var a32 = this.high & 0xFFFF;\n  var a16 = this.low >>> 16;\n  var a00 = this.low & 0xFFFF;\n\n  var b48 = multiplier.high >>> 16;\n  var b32 = multiplier.high & 0xFFFF;\n  var b16 = multiplier.low >>> 16;\n  var b00 = multiplier.low & 0xFFFF;\n\n  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xFFFF;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xFFFF;\n  return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n};\n\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nLongPrototype.mul = LongPrototype.multiply;\n\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.divide = function divide(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n  if (divisor.isZero())\n    throw Error('division by zero');\n\n  // use wasm support if present\n  if (wasm) {\n    // guard against signed division overflow: the largest\n    // negative number / -1 would be 1 larger than the largest\n    // positive number, due to two's complement.\n    if (!this.unsigned &&\n      this.high === -0x80000000 &&\n      divisor.low === -1 && divisor.high === -1) {\n      // be consistent with non-wasm code path\n      return this;\n    }\n    var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  if (this.isZero())\n    return this.unsigned ? UZERO : ZERO;\n  var approx, rem, res;\n  if (!this.unsigned) {\n    // This section is only relevant for signed longs and is derived from the\n    // closure library as a whole.\n    if (this.eq(MIN_VALUE)) {\n      if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\n        return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\n      else if (divisor.eq(MIN_VALUE))\n        return ONE;\n      else {\n        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n        var halfThis = this.shr(1);\n        approx = halfThis.div(divisor).shl(1);\n        if (approx.eq(ZERO)) {\n          return divisor.isNegative() ? ONE : NEG_ONE;\n        } else {\n          rem = this.sub(divisor.mul(approx));\n          res = approx.add(rem.div(divisor));\n          return res;\n        }\n      }\n    } else if (divisor.eq(MIN_VALUE))\n      return this.unsigned ? UZERO : ZERO;\n    if (this.isNegative()) {\n      if (divisor.isNegative())\n        return this.neg().div(divisor.neg());\n      return this.neg().div(divisor).neg();\n    } else if (divisor.isNegative())\n      return this.div(divisor.neg()).neg();\n    res = ZERO;\n  } else {\n    // The algorithm below has not been made for unsigned longs. It's therefore\n    // required to take special care of the MSB prior to running it.\n    if (!divisor.unsigned)\n      divisor = divisor.toUnsigned();\n    if (divisor.gt(this))\n      return UZERO;\n    if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n      return UONE;\n    res = UZERO;\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  rem = this;\n  while (rem.gte(divisor)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n      delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\n\n      // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n      approxRem = approxRes.mul(divisor);\n    while (approxRem.isNegative() || approxRem.gt(rem)) {\n      approx -= delta;\n      approxRes = fromNumber(approx, this.unsigned);\n      approxRem = approxRes.mul(divisor);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero())\n      approxRes = ONE;\n\n    res = res.add(approxRes);\n    rem = rem.sub(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nLongPrototype.div = LongPrototype.divide;\n\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.modulo = function modulo(divisor) {\n  if (!isLong(divisor))\n    divisor = fromValue(divisor);\n\n  // use wasm support if present\n  if (wasm) {\n    var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(\n      this.low,\n      this.high,\n      divisor.low,\n      divisor.high\n    );\n    return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n  }\n\n  return this.sub(this.div(divisor).mul(divisor));\n};\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.mod = LongPrototype.modulo;\n\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nLongPrototype.rem = LongPrototype.modulo;\n\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nLongPrototype.not = function not() {\n  return fromBits(~this.low, ~this.high, this.unsigned);\n};\n\n/**\n * Returns count leading zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countLeadingZeros = function countLeadingZeros() {\n  return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n};\n\n/**\n * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.clz = LongPrototype.countLeadingZeros;\n\n/**\n * Returns count trailing zeros of this Long.\n * @this {!Long}\n * @returns {!number}\n */\nLongPrototype.countTrailingZeros = function countTrailingZeros() {\n  return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n};\n\n/**\n * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n * @function\n * @param {!Long}\n * @returns {!number}\n */\nLongPrototype.ctz = LongPrototype.countTrailingZeros;\n\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.and = function and(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.or = function or(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n};\n\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nLongPrototype.xor = function xor(other) {\n  if (!isLong(other))\n    other = fromValue(other);\n  return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n  else\n    return fromBits(0, this.low << (numBits - 32), this.unsigned);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shl = LongPrototype.shiftLeft;\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRight = function shiftRight(numBits) {\n  if (isLong(numBits))\n    numBits = numBits.toInt();\n  if ((numBits &= 63) === 0)\n    return this;\n  else if (numBits < 32)\n    return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n  else\n    return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n};\n\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr = LongPrototype.shiftRight;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits < 32) return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >>> numBits, this.unsigned);\n  if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n  return fromBits(this.high >>> (numBits - 32), 0, this.unsigned);\n};\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateLeft = function rotateLeft(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotl = LongPrototype.rotateLeft;\n\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotateRight = function rotateRight(numBits) {\n  var b;\n  if (isLong(numBits)) numBits = numBits.toInt();\n  if ((numBits &= 63) === 0) return this;\n  if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  if (numBits < 32) {\n    b = (32 - numBits);\n    return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n  }\n  numBits -= 32;\n  b = (32 - numBits);\n  return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n}\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nLongPrototype.rotr = LongPrototype.rotateRight;\n\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nLongPrototype.toSigned = function toSigned() {\n  if (!this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, false);\n};\n\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nLongPrototype.toUnsigned = function toUnsigned() {\n  if (this.unsigned)\n    return this;\n  return fromBits(this.low, this.high, true);\n};\n\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nLongPrototype.toBytes = function toBytes(le) {\n  return le ? this.toBytesLE() : this.toBytesBE();\n};\n\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nLongPrototype.toBytesLE = function toBytesLE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    lo & 0xff,\n    lo >>> 8 & 0xff,\n    lo >>> 16 & 0xff,\n    lo >>> 24,\n    hi & 0xff,\n    hi >>> 8 & 0xff,\n    hi >>> 16 & 0xff,\n    hi >>> 24\n  ];\n};\n\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nLongPrototype.toBytesBE = function toBytesBE() {\n  var hi = this.high,\n    lo = this.low;\n  return [\n    hi >>> 24,\n    hi >>> 16 & 0xff,\n    hi >>> 8 & 0xff,\n    hi & 0xff,\n    lo >>> 24,\n    lo >>> 16 & 0xff,\n    lo >>> 8 & 0xff,\n    lo & 0xff\n  ];\n};\n\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\n  return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n};\n\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n  return new Long(\n    bytes[0] |\n    bytes[1] << 8 |\n    bytes[2] << 16 |\n    bytes[3] << 24,\n    bytes[4] |\n    bytes[5] << 8 |\n    bytes[6] << 16 |\n    bytes[7] << 24,\n    unsigned\n  );\n};\n\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n  return new Long(\n    bytes[4] << 24 |\n    bytes[5] << 16 |\n    bytes[6] << 8 |\n    bytes[7],\n    bytes[0] << 24 |\n    bytes[1] << 16 |\n    bytes[2] << 8 |\n    bytes[3],\n    unsigned\n  );\n};\n\nexport default Long;\n", null, null, "import { convexToJson } from \"@convex-dev/common\";\n\nexport function canonicalizeUdfPath(udfPath: string): string {\n  const pieces = udfPath.split(\":\");\n  let moduleName: string;\n  let functionName: string;\n  if (pieces.length == 1) {\n    moduleName = pieces[0];\n    functionName = \"default\";\n  } else {\n    moduleName = pieces.slice(0, pieces.length - 1).join(\":\");\n    functionName = pieces[pieces.length - 1];\n  }\n  if (!moduleName.endsWith(\".js\")) {\n    moduleName = `${moduleName}.js`;\n  }\n  return `${moduleName}:${functionName}`;\n}\n\n/**\n * A string representing the name and arguments of a query.\n *\n * This is used by the {@link InternalConvexClient}.\n *\n * @public\n */\nexport type QueryToken = string;\n\n// TODO(CX-749): Make this a unique representation (sort sets, dicts, objects)\nexport function serializePathAndArgs(udfPath: string, args: any[]): QueryToken {\n  return JSON.stringify({\n    udfPath: canonicalizeUdfPath(udfPath),\n    args: convexToJson(args),\n  });\n}\n", "import { convexToJson } from \"@convex-dev/common\";\nimport {\n  AddQuery,\n  RemoveQuery,\n  QueryId,\n  QuerySetModification,\n  QuerySetVersion,\n  IdentityVersion,\n  Authenticate,\n} from \"./protocol.js\";\nimport {\n  canonicalizeUdfPath,\n  QueryToken,\n  serializePathAndArgs,\n} from \"./udf_path_utils.js\";\n\ntype LocalQuery = {\n  id: QueryId;\n  canonicalizedUdfPath: string;\n  args: any[];\n  numSubscribers: number;\n};\n\nexport class LocalSyncState {\n  private nextQueryId: QueryId;\n  private querySetVersion: QuerySetVersion;\n  private readonly querySet: Map<QueryToken, LocalQuery>;\n  private readonly queryIdToToken: Map<QueryId, QueryToken>;\n  private identityVersion: IdentityVersion;\n  private auth?: { tokenType: \"Admin\" | \"User\"; value: string };\n\n  constructor() {\n    this.nextQueryId = 0;\n    this.querySetVersion = 0;\n    this.identityVersion = 0;\n    this.querySet = new Map();\n    this.queryIdToToken = new Map();\n  }\n\n  subscribe(\n    udfPath: string,\n    args: any[]\n  ): {\n    queryToken: QueryToken;\n    modification: QuerySetModification | null;\n    unsubscribe: () => QuerySetModification | null;\n  } {\n    const canonicalizedUdfPath = canonicalizeUdfPath(udfPath);\n    const queryToken = serializePathAndArgs(canonicalizedUdfPath, args);\n\n    const existingEntry = this.querySet.get(queryToken);\n\n    if (existingEntry !== undefined) {\n      existingEntry.numSubscribers += 1;\n      return {\n        queryToken,\n        modification: null,\n        unsubscribe: () => this.removeSubscriber(queryToken),\n      };\n    } else {\n      const queryId = this.nextQueryId++;\n      const query: LocalQuery = {\n        id: queryId,\n        canonicalizedUdfPath,\n        args,\n        numSubscribers: 1,\n      };\n      this.querySet.set(queryToken, query);\n      this.queryIdToToken.set(queryId, queryToken);\n\n      const baseVersion = this.querySetVersion;\n      const newVersion = ++this.querySetVersion;\n\n      const add: AddQuery = {\n        type: \"Add\",\n        queryId,\n        udfPath: canonicalizedUdfPath,\n        args: args.map(convexToJson),\n      };\n      const modification: QuerySetModification = {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [add],\n      };\n      return {\n        queryToken,\n        modification,\n        unsubscribe: () => this.removeSubscriber(queryToken),\n      };\n    }\n  }\n\n  queryId(udfPath: string, args: any[]): QueryId | null {\n    const canonicalizedUdfPath = canonicalizeUdfPath(udfPath);\n    const queryToken = serializePathAndArgs(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== undefined) {\n      return existingEntry.id;\n    }\n    return null;\n  }\n\n  setAuth(value: string): Authenticate {\n    this.auth = {\n      tokenType: \"User\",\n      value: value,\n    };\n    const baseVersion = this.identityVersion++;\n    return {\n      type: \"Authenticate\",\n      baseVersion: baseVersion,\n      ...this.auth,\n    };\n  }\n\n  setAdminAuth(value: string): Authenticate {\n    this.auth = {\n      tokenType: \"Admin\",\n      value: value,\n    };\n    const baseVersion = this.identityVersion++;\n    return {\n      type: \"Authenticate\",\n      baseVersion: baseVersion,\n      ...this.auth,\n    };\n  }\n\n  clearAuth(): Authenticate {\n    this.auth = undefined;\n    const baseVersion = this.identityVersion++;\n    return {\n      type: \"Authenticate\",\n      tokenType: \"None\",\n      baseVersion: baseVersion,\n    };\n  }\n\n  queryPath(queryId: QueryId): string | null {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs)!.canonicalizedUdfPath;\n    }\n    return null;\n  }\n\n  queryArgs(queryId: QueryId): any[] | null {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs)!.args;\n    }\n    return null;\n  }\n\n  queryToken(queryId: QueryId): string | null {\n    return this.queryIdToToken.get(queryId) ?? null;\n  }\n\n  restart(): [QuerySetModification, Authenticate?] {\n    const modifications = [];\n    for (const localQuery of this.querySet.values()) {\n      const add: AddQuery = {\n        type: \"Add\",\n        queryId: localQuery.id,\n        udfPath: localQuery.canonicalizedUdfPath,\n        args: localQuery.args.map(convexToJson),\n      };\n      modifications.push(add);\n    }\n    this.querySetVersion = 1;\n    const querySet: QuerySetModification = {\n      type: \"ModifyQuerySet\",\n      baseVersion: 0,\n      newVersion: 1,\n      modifications,\n    };\n    // If there's no auth, no need to send an update as the server will also start with an unknown identity.\n    if (!this.auth) {\n      this.identityVersion = 0;\n      return [querySet, undefined];\n    }\n    const authenticate: Authenticate = {\n      type: \"Authenticate\",\n      baseVersion: 0,\n      ...this.auth,\n    };\n    this.identityVersion = 1;\n    return [querySet, authenticate];\n  }\n\n  private removeSubscriber(\n    queryToken: QueryToken\n  ): QuerySetModification | null {\n    const localQuery = this.querySet.get(queryToken)!;\n\n    if (localQuery.numSubscribers > 1) {\n      localQuery.numSubscribers -= 1;\n      return null;\n    } else {\n      this.querySet.delete(queryToken);\n      this.queryIdToToken.delete(localQuery.id);\n      const baseVersion = this.querySetVersion;\n      const newVersion = ++this.querySetVersion;\n      const remove: RemoveQuery = {\n        type: \"Remove\",\n        queryId: localQuery.id,\n      };\n      return {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [remove],\n      };\n    }\n  }\n}\n", "// This is blue #9 from https://www.radix-ui.com/docs/colors/palette-composition/the-scales\n// It must look good in both light and dark mode.\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\n\nexport function logToConsole(\n  type: \"info\" | \"error\",\n  source: \"query\" | \"mutation\",\n  udfPath: string,\n  message: string\n) {\n  const prefix = source === \"query\" ? \"Q\" : \"M\";\n  if (type == \"info\") {\n    console.log(`%c[CONVEX ${prefix}(${udfPath})] ${message}`, INFO_COLOR);\n  } else {\n    console.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n  }\n}\n\nexport function logFatalError(message: string): Error {\n  const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n  console.error(errorMessage);\n  return new Error(errorMessage);\n}\n\nexport function createError(\n  source: \"query\" | \"mutation\",\n  udfPath: string,\n  message: string\n): Error {\n  const prefix = source === \"query\" ? \"Q\" : \"M\";\n  return new Error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n}\n", "import { Mutation, MutationId, MutationResponse } from \"./protocol.js\";\nimport { JSONValue, convexToJson, jsonToConvex } from \"@convex-dev/common\";\nimport { createError, logToConsole } from \"../logging.js\";\nimport Long from \"long\";\n\ntype MutationStatus =\n  | {\n      status: \"Requested\";\n      onResult: (result: any) => void;\n      onFailure: (reason: any) => void;\n    }\n  | {\n      status: \"Committed\";\n      ts: Long;\n    };\n\nexport class MutationManager {\n  private inflightMutations: Map<\n    MutationId,\n    {\n      message: Mutation;\n      status: MutationStatus;\n    }\n  >;\n\n  constructor() {\n    this.inflightMutations = new Map();\n  }\n\n  request(\n    udfPath: string,\n    args: any[],\n    mutationId: MutationId\n  ): {\n    message: Mutation;\n    result: Promise<any>;\n  } {\n    const message: Mutation = {\n      type: \"Mutation\",\n      mutationId,\n      udfPath,\n      args: <JSONValue[]>convexToJson(args),\n    };\n\n    const result = new Promise((resolve, reject) => {\n      this.inflightMutations.set(mutationId, {\n        message,\n        status: { status: \"Requested\", onResult: resolve, onFailure: reject },\n      });\n    });\n\n    return { message, result };\n  }\n\n  /**\n   * Update the state after receving a mutation response.\n   *\n   * @returns A MutationId if the mutation is complete and its optimistic update\n   * can be dropped, null otherwise.\n   */\n  onResponse(response: MutationResponse): MutationId | null {\n    const mutationInfo = this.inflightMutations.get(response.mutationId);\n    if (mutationInfo === undefined) {\n      // Annoyingly we can occasionally get responses to mutations that we're no\n      // longer tracking. One flow where this happens is:\n      // 1. Client sends mutation 1\n      // 2. Client gets response for mutation 1. The sever says that it was committed at ts=10.\n      // 3. Client is disconnected\n      // 4. Client reconnects and re-issues queries and this mutation.\n      // 5. Server sends transition message to ts=20\n      // 6. Client drops mutation because it's already been observed.\n      // 7. Client receives a second response for mutation 1 but doesn't know about it anymore.\n\n      // The right fix for this is probably to add a reconciliation phase on\n      // reconnection where we receive responses to all the mutations before\n      // the transition message so this flow could never happen (CX-1513).\n\n      // For now though, we can just ignore this message.\n      return null;\n    }\n\n    // Because `.restart()` re-requests committed mutations, we may get some\n    // responses for mutations that are already in the \"Committed\" state.\n    // We can safely ignore those because we've already notified the UI about\n    // their results.\n    if (mutationInfo.status.status === \"Requested\") {\n      const udfPath = mutationInfo.message.udfPath;\n      for (const line of response.logLines) {\n        logToConsole(\"info\", \"mutation\", udfPath, line);\n      }\n      if (response.success) {\n        mutationInfo.status.onResult(jsonToConvex(response.result));\n        mutationInfo.status = {\n          status: \"Committed\",\n          ts: response.ts,\n        };\n        // Need to wait until we transition past this timestamp to consider the\n        // mutation complete.\n        return null;\n      } else {\n        this.inflightMutations.delete(response.mutationId);\n        logToConsole(\"error\", \"mutation\", udfPath, response.result);\n        mutationInfo.status.onFailure(\n          createError(\"mutation\", udfPath, response.result)\n        );\n        // If the mutation is a failure, then we consider it complete and should\n        // drop the optimistic update.\n        return response.mutationId;\n      }\n    }\n    return null;\n  }\n\n  removeCompletedMutations(ts: Long): Set<MutationId> {\n    const completeMutations: Set<MutationId> = new Set();\n    for (const [mutationId, mutationInfo] of this.inflightMutations.entries()) {\n      const status = mutationInfo.status;\n      if (status.status == \"Committed\" && status.ts.lessThanOrEqual(ts)) {\n        completeMutations.add(mutationId);\n        this.inflightMutations.delete(mutationId);\n      }\n    }\n    return completeMutations;\n  }\n\n  hasUncommittedMutations(): boolean {\n    for (const mutationInfo of this.inflightMutations.values()) {\n      if (mutationInfo.status.status === \"Requested\") {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  restart(): Mutation[] {\n    // When we reconnect to the backend, re-request all the in-flight mutations.\n\n    // This includes mutations that have already been committed because we still\n    // want to tell the backend to transition the client past the mutations\n    // committed timestamp. This is safe because mutations are idempotent.\n    const allMessages = [];\n    for (const value of this.inflightMutations.values()) {\n      allMessages.push(value.message);\n    }\n    return allMessages;\n  }\n}\n", "import { Value } from \"@convex-dev/common\";\nimport { GenericAPI, NamedQuery, QueryNames } from \"../api.js\";\nimport { createError } from \"../logging.js\";\nimport { MutationId } from \"./protocol.js\";\nimport { QueryResult } from \"./remote_query_set.js\";\nimport { QueryToken, serializePathAndArgs } from \"./udf_path_utils.js\";\n\n/**\n * A view of the query results currently in the Convex client for use within\n * optimistic updates.\n *\n * @public\n */\nexport interface OptimisticLocalStore<API extends GenericAPI = GenericAPI> {\n  /**\n   * Retrieve the result of a query from the client.\n   *\n   * Important: Query results should be treated as immutable!\n   * Always make new copies of structures within query results to avoid\n   * corrupting data within the client.\n   *\n   * @param name - The name of the query.\n   * @param args - An array of the arguments for this query.\n   * @returns The query result or `undefined` if the query is not currently\n   * in the client.\n   */\n  getQuery<Name extends QueryNames<API>>(\n    name: Name,\n    args: Parameters<NamedQuery<API, Name>>\n  ): undefined | ReturnType<NamedQuery<API, Name>>;\n\n  /**\n   * Optimistically update the result of a query.\n   *\n   * This can either be a new value (perhaps derived from the old value from\n   * {@link OptimisticLocalStore.getQuery}) or `undefined` to remove the query.\n   * Removing a query is useful to create loading states while Convex recomputes\n   * the query results.\n   *\n   * @param name - The name of the query.\n   * @param args - An array of the arguments for this query.\n   * @param value - The new value to set the query to or `undefined` to remove\n   * it from the client.\n   */\n  setQuery<Name extends QueryNames<API>>(\n    name: Name,\n    args: Parameters<NamedQuery<API, Name>>,\n    value: undefined | ReturnType<NamedQuery<API, Name>>\n  ): void;\n}\n/**\n * A temporary, local update to query results within this client.\n *\n * This update will always be executed when a mutation is synced to the Convex\n * server and rolled back when the mutation completes.\n *\n * Note that optimistic updates can be called multiple times! If the client\n * loads new data while the mutation is in progress, the update will be replayed\n * again.\n *\n * @param localQueryStore - An interface to read and edit local query results.\n * @param args - The arguments to the mutation.\n *\n * @public\n */\nexport type OptimisticUpdate<\n  API extends GenericAPI,\n  Arguments extends any[]\n> = (localQueryStore: OptimisticLocalStore<API>, ...args: Arguments) => void;\n\n/**\n * An optimistic update function that has been curried over its arguments.\n */\ntype WrappedOptimisticUpdate = (locaQueryStore: OptimisticLocalStore) => void;\n\n/**\n * The implementation of `OptimisticLocalStore`.\n *\n * This class provides the interface for optimistic updates to modify query results.\n */\nclass OptimisticLocalStoreImpl implements OptimisticLocalStore {\n  // A references of the query results in OptimisticQueryResults\n  private readonly queryResults: QueryResultsMap;\n\n  // All of the queries modified by this class\n  readonly modifiedQueries: QueryToken[];\n\n  constructor(queryResults: QueryResultsMap) {\n    this.queryResults = queryResults;\n    this.modifiedQueries = [];\n  }\n\n  getQuery(name: string, args: Value[]): Value | undefined {\n    const query = this.queryResults.get(serializePathAndArgs(name, args));\n    if (query === undefined) {\n      return undefined;\n    }\n    const result = query.result;\n    if (result === undefined) {\n      return undefined;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      // If the query is an error state, just return `undefined` as though\n      // it's loading. Optimistic updates should already handle `undefined` well\n      // and there isn't a need to break the whole update because it tried\n      // to load a single query that errored.\n      return undefined;\n    }\n  }\n\n  setQuery(name: string, args: Value[], value: Value | undefined): void {\n    const queryToken = serializePathAndArgs(name, args);\n\n    let result: QueryResult | undefined;\n    if (value === undefined) {\n      result = undefined;\n    } else {\n      result = {\n        success: true,\n        value,\n      };\n    }\n    const query: Query = {\n      udfPath: name,\n      args,\n      result,\n    };\n    this.queryResults.set(queryToken, query);\n    this.modifiedQueries.push(queryToken);\n  }\n}\n\ntype OptimisticUpdateAndId = {\n  update: WrappedOptimisticUpdate;\n  mutationId: MutationId;\n};\n\ntype Query = {\n  // undefined means the query was set to be loading (undefined) in an optimistic update.\n  // Note that we can also have queries not present in the QueryResultMap\n  // at all because they are still loading from the server.\n  result: QueryResult | undefined;\n  udfPath: string;\n  args: Value[];\n};\nexport type QueryResultsMap = Map<QueryToken, Query>;\n\ntype ChangedQueries = QueryToken[];\n\n/**\n * A view of all of our query results with optimistic updates applied on top.\n */\nexport class OptimisticQueryResults {\n  private queryResults: QueryResultsMap;\n  private optimisticUpdates: OptimisticUpdateAndId[];\n\n  constructor() {\n    this.queryResults = new Map();\n    this.optimisticUpdates = [];\n  }\n\n  ingestQueryResultsFromServer(\n    serverQueryResults: QueryResultsMap,\n    optimisticUpdatesToDrop: Set<MutationId>\n  ): ChangedQueries {\n    this.optimisticUpdates = this.optimisticUpdates.filter(updateAndId => {\n      return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n    });\n\n    const oldQueryResults = this.queryResults;\n    this.queryResults = new Map(serverQueryResults);\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    for (const updateAndId of this.optimisticUpdates) {\n      updateAndId.update(localStore);\n    }\n\n    // To find the changed queries, just do a shallow comparison\n    // TODO(CX-733): Change this so we avoid unnecessary rerenders\n    const changedQueries: ChangedQueries = [];\n    for (const [queryToken, query] of this.queryResults) {\n      const oldQuery = oldQueryResults.get(queryToken);\n      if (oldQuery === undefined || oldQuery.result !== query.result) {\n        changedQueries.push(queryToken);\n      }\n    }\n\n    return changedQueries;\n  }\n\n  applyOptimisticUpdate(\n    update: WrappedOptimisticUpdate,\n    mutationId: MutationId\n  ): ChangedQueries {\n    // Apply the update to our store\n    this.optimisticUpdates.push({\n      update,\n      mutationId,\n    });\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    update(localStore);\n\n    // Notify about any query results that changed\n    // TODO(CX-733): Change this so we avoid unnecessary rerenders\n    return localStore.modifiedQueries;\n  }\n\n  queryResult(queryToken: QueryToken): Value | undefined {\n    const query = this.queryResults.get(queryToken);\n    if (query === undefined) {\n      return undefined;\n    }\n    const result = query.result;\n    if (result === undefined) {\n      return undefined;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      throw createError(\"query\", query.udfPath, result.errorMessage);\n    }\n  }\n}\n", "import { jsonToConvex, Value } from \"@convex-dev/common\";\nimport Long from \"long\";\nimport { logToConsole } from \"../logging.js\";\nimport { QueryId, StateVersion, Transition } from \"./protocol.js\";\n\n/**\n * The result of running a query function on the server.\n *\n * If the function hit an exception it will have an `errorMessage`. Otherwise\n * it will produce a `Value`.\n *\n * @public\n */\nexport type QueryResult =\n  | {\n      success: true;\n      value: Value;\n    }\n  | { success: false; errorMessage: string };\n\n/**\n * A represention of the query results we've received on the current WebSocket\n * connection.\n */\nexport class RemoteQuerySet {\n  private version: StateVersion;\n  private readonly remoteQuerySet: Map<QueryId, QueryResult>;\n  private readonly queryPath: (queryId: QueryId) => string | null;\n\n  constructor(queryPath: (queryId: QueryId) => string | null) {\n    this.version = { querySet: 0, ts: Long.fromNumber(0), identity: 0 };\n    this.remoteQuerySet = new Map();\n    this.queryPath = queryPath;\n  }\n\n  transition(transition: Transition): void {\n    const start = transition.startVersion;\n    if (\n      this.version.querySet !== start.querySet ||\n      this.version.ts.notEquals(start.ts) ||\n      this.version.identity !== start.identity\n    ) {\n      throw new Error(`Invalid start version: ${start.ts}:${start.querySet}`);\n    }\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              logToConsole(\"info\", \"query\", queryPath, line);\n            }\n          }\n          const value = jsonToConvex(modification.value ?? null);\n          this.remoteQuerySet.set(modification.queryId, {\n            success: true,\n            value,\n          });\n          break;\n        }\n        case \"QueryFailed\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              logToConsole(\"info\", \"query\", queryPath, line);\n            }\n          }\n\n          this.remoteQuerySet.set(modification.queryId, {\n            success: false,\n            errorMessage: modification.errorMessage,\n          });\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.remoteQuerySet.delete(modification.queryId);\n          break;\n        }\n        default: {\n          // Enforce that the switch-case is exhaustive.\n          // eslint-disable-next-line  @typescript-eslint/no-unused-vars\n          const _: never = modification;\n          throw new Error(`Invalid modification ${modification}`);\n        }\n      }\n    }\n    this.version = transition.endVersion;\n  }\n\n  remoteQueryResults(): Map<QueryId, QueryResult> {\n    return this.remoteQuerySet;\n  }\n\n  timestamp(): Long {\n    return this.version.ts;\n  }\n}\n", "import * as Base64 from \"base64-js\";\nimport { z } from \"zod\";\nimport { JSONValue } from \"@convex-dev/common\";\nimport Long from \"long\";\n\n/**\n * Shared schema\n */\n\n// Taken from https://github.com/colinhacks/zod#json-type\nconst jsonSchema: z.ZodSchema<JSONValue> = z.lazy(() =>\n  z.union([\n    z.string(),\n    z.number(),\n    z.boolean(),\n    z.null(),\n    z.array(jsonSchema),\n    z.record(jsonSchema),\n  ])\n);\n\nconst u64Schema = z\n  .string()\n  .refine(arg => Base64.byteLength(arg) == 8)\n  .transform(arg => {\n    const integerBytes = Base64.toByteArray(arg);\n    return Long.fromBytesLE(Array.from(integerBytes), true);\n  });\n\n/**\n * Validator for {@link QueryId}.\n */\nexport const queryIdSchema = z.number().int().nonnegative();\n\n/**\n * Unique nonnegative integer identifying a single query.\n */\nexport type QueryId = z.infer<typeof queryIdSchema>;\n\nconst querySetVersionSchema = z.number().int().nonnegative();\nexport type QuerySetVersion = z.infer<typeof querySetVersionSchema>;\n\nconst mutationIdSchema = z.number().int().nonnegative();\nexport type MutationId = z.infer<typeof mutationIdSchema>;\n\nconst identityVersionSchema = z.number().int().nonnegative();\nexport type IdentityVersion = z.infer<typeof identityVersionSchema>;\n\n/**\n * Client message schema\n */\n\nconst connectSchema = z.object({\n  type: z.literal(\"Connect\"),\n  sessionId: z.string(),\n  connectionCount: z.number().int().nonnegative(),\n});\n\nconst addQuerySchema = z.object({\n  type: z.literal(\"Add\"),\n  queryId: queryIdSchema,\n  udfPath: z.string(),\n  args: z.array(jsonSchema),\n});\nexport type AddQuery = z.infer<typeof addQuerySchema>;\n\nconst removeQuerySchema = z.object({\n  type: z.literal(\"Remove\"),\n  queryId: queryIdSchema,\n});\nexport type RemoveQuery = z.infer<typeof removeQuerySchema>;\n\nconst querySetModificationSchema = z.object({\n  type: z.literal(\"ModifyQuerySet\"),\n  baseVersion: querySetVersionSchema,\n  newVersion: querySetVersionSchema,\n  modifications: z.array(z.union([addQuerySchema, removeQuerySchema])),\n});\nexport type QuerySetModification = z.infer<typeof querySetModificationSchema>;\n\nconst mutationSchema = z.object({\n  type: z.literal(\"Mutation\"),\n  mutationId: mutationIdSchema,\n  udfPath: z.string(),\n  args: z.array(jsonSchema),\n});\nexport type Mutation = z.infer<typeof mutationSchema>;\n\nconst authenticateSchema = z.discriminatedUnion(\"tokenType\", [\n  z.object({\n    type: z.literal(\"Authenticate\"),\n    tokenType: z.literal(\"Admin\"),\n    value: z.string(),\n    baseVersion: identityVersionSchema,\n  }),\n  z.object({\n    type: z.literal(\"Authenticate\"),\n    tokenType: z.literal(\"User\"),\n    value: z.string(),\n    baseVersion: identityVersionSchema,\n  }),\n  z.object({\n    type: z.literal(\"Authenticate\"),\n    tokenType: z.literal(\"None\"),\n    baseVersion: identityVersionSchema,\n  }),\n]);\nexport type Authenticate = z.infer<typeof authenticateSchema>;\nconst clientSchema = z.union([\n  connectSchema,\n  querySetModificationSchema,\n  mutationSchema,\n  authenticateSchema,\n]);\nexport type ClientMessage = z.infer<typeof clientSchema>;\n\n/**\n * Server message schema\n */\nconst tsSchema = u64Schema;\nconst logLinesSchema = z.array(z.string());\n\nconst stateVersionSchema = z.object({\n  querySet: queryIdSchema,\n  ts: tsSchema,\n  identity: identityVersionSchema,\n});\nexport type StateVersion = z.infer<typeof stateVersionSchema>;\n\nconst stateModificationSchema = z.discriminatedUnion(\"type\", [\n  z.object({\n    type: z.literal(\"QueryUpdated\"),\n    queryId: queryIdSchema,\n    value: jsonSchema,\n    logLines: logLinesSchema,\n  }),\n  z.object({\n    type: z.literal(\"QueryFailed\"),\n    queryId: queryIdSchema,\n    errorMessage: z.string(),\n    logLines: logLinesSchema,\n  }),\n  z.object({\n    type: z.literal(\"QueryRemoved\"),\n    queryId: queryIdSchema,\n  }),\n]);\nconst transitionSchema = z.object({\n  type: z.literal(\"Transition\"),\n  startVersion: stateVersionSchema,\n  endVersion: stateVersionSchema,\n  modifications: z.array(stateModificationSchema),\n});\nexport type Transition = z.infer<typeof transitionSchema>;\n\nconst mutationSuccessSchema = z.object({\n  type: z.literal(\"MutationResponse\"),\n  mutationId: mutationIdSchema,\n  success: z.literal(true),\n  result: jsonSchema,\n  ts: tsSchema,\n  logLines: logLinesSchema,\n});\nconst mutationFailedSchema = z.object({\n  type: z.literal(\"MutationResponse\"),\n  mutationId: mutationIdSchema,\n  success: z.literal(false),\n  result: z.string(),\n  logLines: logLinesSchema,\n});\nconst mutationResponseSchema = z.discriminatedUnion(\"success\", [\n  mutationSuccessSchema,\n  mutationFailedSchema,\n]);\nexport type MutationResponse = z.infer<typeof mutationResponseSchema>;\nconst fatalErrorSchema = z.object({\n  type: z.literal(\"FatalError\"),\n  error: z.string(),\n});\n\nexport const serverSchema = z.union([\n  transitionSchema,\n  mutationResponseSchema,\n  fatalErrorSchema,\n]);\nexport type ServerMessage = z.infer<typeof serverSchema>;\n", "var util;\n(function (util) {\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n})(util || (util = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, null, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\nconst defaultErrorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (issue.validation !== \"regex\")\n                message = `Invalid ${issue.validation}`;\n            else\n                message = \"Invalid\";\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be greater than ${issue.inclusive ? `or equal to ` : ``}${issue.minimum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be less than ${issue.inclusive ? `or equal to ` : ``}${issue.maximum}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nlet overrideErrorMap = defaultErrorMap;\nconst setErrorMap = (map) => {\n    overrideErrorMap = map;\n};\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            overrideErrorMap,\n            defaultErrorMap,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid\" or \"required\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\" && required_error)\n            return { message: required_error };\n        if (params.invalid_type_error)\n            return { message: params.invalid_type_error };\n        return { message: ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this.superRefine = this._refinement;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.default = this.default.bind(this);\n        this.describe = this.describe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: [], parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = -Infinity;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min) {\n                    min = ch.value;\n                }\n            }\n        });\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        this._def.checks.map((ch) => {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max) {\n                    max = ch.value;\n                }\n            }\n        });\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        return {\n            status: \"valid\",\n            value: new Date(input.data.getTime()),\n        };\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return this.min(len, message).max(len, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        for (const key in ctx.data) {\n            if (!shapeKeys.includes(key)) {\n                extraKeys.push(key);\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).map((key) => {\n            if (util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util.objectKeys(this.shape).map((key) => {\n                if (util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required() {\n        const newShape = {};\n        for (const key in this.shape) {\n            const fieldSchema = this.shape[key];\n            let newField = fieldSchema;\n            while (newField instanceof ZodOptional) {\n                newField = newField._def.innerType;\n            }\n            newShape[key] = newField;\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.options.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: this.validDiscriminatorValues,\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get validDiscriminatorValues() {\n        return Array.from(this.options.keys());\n    }\n    get options() {\n        return this._def.options;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, types, params) {\n        // Get all the valid discriminator values\n        const options = new Map();\n        try {\n            types.forEach((type) => {\n                const discriminatorValue = type.shape[discriminator].value;\n                options.set(discriminatorValue, type);\n            });\n        }\n        catch (e) {\n            throw new Error(\"The discriminator value could not be extracted from all the provided schemas\");\n        }\n        // Assert that all the discriminator values are unique\n        if (options.size !== types.length) {\n            throw new Error(\"Some of the discriminator values are not unique\");\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    overrideErrorMap,\n                    defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    overrideErrorMap,\n                    defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n}\nZodFunction.create = (args, returns, params) => {\n    return new ZodFunction({\n        args: (args\n            ? args.rest(ZodUnknown.create())\n            : ZodTuple.create([]).rest(ZodUnknown.create())),\n        returns: returns || ZodUnknown.create(),\n        typeName: ZodFirstPartyTypeKind.ZodFunction,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params, true);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\n\nvar mod = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getParsedType: getParsedType,\n    ZodParsedType: ZodParsedType,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    get objectUtil () { return objectUtil; },\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodNaN: ZodNaN,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError,\n    defaultErrorMap: defaultErrorMap,\n    get overrideErrorMap () { return overrideErrorMap; },\n    setErrorMap: setErrorMap\n});\n\nexport { DIRTY, EMPTY_PATH, INVALID, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, custom, dateType as date, mod as default, defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, overrideErrorMap, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, mod as z };\n", "import { serverSchema, ClientMessage, ServerMessage } from \"./protocol.js\";\n\nconst CLOSE_NORMAL = 1000;\nconst CLOSE_NO_STATUS = 1005;\n\ntype PromisePair<T> = { promise: Promise<T>; resolve: (value: T) => void };\n\n/**\n * The various states our WebSocket can be in:\n *\n * - \"disconnected\": We don't have a WebSocket, but plan to create one.\n * - \"connecting\": We have created the WebSocket and are waiting for the\n *   `onOpen` callback.\n * - \"ready\": We have an open WebSocket.\n * - \"closing\": We called `.close()` on the WebSocket and are waiting for the\n *   `onClose` callback before we schedule a reconnect.\n * - \"stopping\": The application decided to totally stop the WebSocket. We are\n *    waiting for the `onClose` callback before we consider this WebSocket stopped.\n * - \"stopped\": We have stopped the WebSocket and will never create a new one.\n * \n * \n                     WebSocket State Machine\n\n                         \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n       \u250C\u2500\u2500\u2500\u2500onclose\u2500\u2500\u2500\u2500\u2500\u25B6\u2502disconnected \u2502\u2500stop()\u2500\u25B6\u2502   stopped   \u2502\n       \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502                        \u2502                       \u25B2\n       \u2502                 new WebSocket()                \u2502\n       \u2502                        \u2502                   onclose\n       \u2502                        \u25BC                       \u2502\n\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510          \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   closing   \u2502\u25C0\u2500close()\u2500\u2502 connecting  \u2502\u2500stop()\u2500\u25B6\u2502  stopping   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n   \u2502   \u25B2                        \u2502                       \u25B2  \u25B2\n   \u2502   \u2502                     onopen                     \u2502  \u2502\n   \u2502   \u2502                        \u2502                       \u2502  \u2502\n   \u2502   \u2502                        \u25BC                       \u2502  \u2502\n   \u2502   \u2502                 \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                \u2502  \u2502\n   \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500close()\u2500\u2502    ready    \u2502\u2500stop()\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n   \u2502                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                   \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500stop()\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n */\ntype Socket =\n  | { state: \"disconnected\" }\n  | { state: \"connecting\"; ws: WebSocket }\n  | { state: \"ready\"; ws: WebSocket }\n  | { state: \"closing\" }\n  | { state: \"stopping\"; promisePair: PromisePair<null> }\n  | { state: \"stopped\" };\n\nfunction promisePair<T>(): PromisePair<T> {\n  let resolvePromise: (value: T) => void;\n  const promise = new Promise<T>(resolve => {\n    resolvePromise = resolve;\n  });\n  return { promise, resolve: resolvePromise! };\n}\n\n/**\n * A wrapper around a websocket that handles errors, reconnection, and message\n * parsing.\n */\nexport class WebSocketManager {\n  private socket: Socket;\n\n  /** Upon HTTPS/WSS failure, the first jittered backoff duration, in ms. */\n  private readonly initialBackoff: number;\n\n  /** We backoff exponentially, but we need to cap that--this is the jittered max. */\n  private readonly maxBackoff: number;\n\n  /** How many times have we failed consecutively? */\n  private retries: number;\n\n  /** Did the WebSocket close unexpectedly? If so, we won't consider the socket\n   * healthy until we receive a successful message from the server: Initiating\n   * the connection won't be sufficient. */\n  private closedUnexpectedly: boolean;\n\n  private readonly uri: string;\n  private readonly onOpen: () => void;\n  private readonly onMessage: (message: ServerMessage) => void;\n  private readonly webSocketConstructor: typeof WebSocket;\n\n  constructor(\n    uri: string,\n    onOpen: () => void,\n    onMessage: (message: ServerMessage) => void,\n    webSocketConstructor: typeof WebSocket\n  ) {\n    this.webSocketConstructor = webSocketConstructor;\n    this.socket = { state: \"disconnected\" };\n    this.initialBackoff = 100;\n    this.maxBackoff = 16000;\n    this.retries = 0;\n    this.closedUnexpectedly = false;\n\n    this.uri = uri;\n    this.onOpen = onOpen;\n    this.onMessage = onMessage;\n\n    this.connect();\n  }\n\n  private async connect() {\n    if (\n      this.socket.state === \"closing\" ||\n      this.socket.state === \"stopping\" ||\n      this.socket.state === \"stopped\"\n    ) {\n      return;\n    }\n    if (this.socket.state !== \"disconnected\") {\n      throw new Error(\"Didn't start connection from disconnected state\");\n    }\n\n    const ws = new this.webSocketConstructor(this.uri);\n    this.socket = {\n      state: \"connecting\",\n      ws,\n    };\n    ws.onopen = () => {\n      if (this.socket.state !== \"connecting\") {\n        throw new Error(\"onopen called with socket not in connecting state\");\n      }\n      this.socket = { state: \"ready\", ws };\n      if (!this.closedUnexpectedly) {\n        this.retries = 0;\n      }\n      this.onOpen();\n    };\n    // NB: The WebSocket API calls `onclose` even if connection fails, so we can route all error paths through `onclose`.\n    ws.onerror = error => {\n      const message = (<ErrorEvent>error).message;\n      console.log(`WebSocket error: ${message}`);\n      this.closeAndReconnect();\n    };\n    ws.onmessage = message => {\n      if (this.closedUnexpectedly) {\n        this.closedUnexpectedly = false;\n        this.retries = 0;\n      }\n      try {\n        const serverMessage = serverSchema.parse(JSON.parse(message.data));\n        this.onMessage(serverMessage);\n      } catch (error: any) {\n        console.log(`Failed to process server message, reconnecting: ${error}`);\n        this.closeAndReconnect();\n        throw error;\n      }\n    };\n    ws.onclose = event => {\n      if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_NO_STATUS) {\n        let msg = `WebSocket closed unexpectedly with code ${event.code}`;\n        if (event.reason) {\n          msg += `: ${event.reason}`;\n        }\n        console.error(msg);\n        this.closedUnexpectedly = true;\n      }\n      if (this.socket.state === \"stopping\") {\n        this.socket.promisePair.resolve(null);\n        this.socket = { state: \"stopped\" };\n        return;\n      }\n      this.socket = { state: \"disconnected\" };\n      const backoff = this.nextBackoff();\n      console.log(`Attempting reconnect in ${backoff}ms`);\n      setTimeout(() => this.connect(), backoff);\n    };\n  }\n\n  sendMessage(message: ClientMessage) {\n    if (this.socket.state === \"ready\") {\n      const request = JSON.stringify(message);\n      try {\n        this.socket.ws.send(request);\n      } catch (error: any) {\n        console.log(\n          `Failed to send message on WebSocket, reconnecting: ${error}`\n        );\n        this.closeAndReconnect();\n      }\n    }\n  }\n\n  /**\n   * Close the WebSocket and schedule a reconnect when it completes closing.\n   *\n   * This should be used when we hit an error and would like to restart the session.\n   */\n  private closeAndReconnect() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"closing\":\n      case \"stopping\":\n      case \"stopped\":\n        // Nothing to do if we don't have a WebSocket.\n        return;\n      case \"connecting\":\n      case \"ready\":\n        this.socket.ws.close();\n        this.socket = {\n          state: \"closing\",\n        };\n        return;\n      default: {\n        // Enforce that the switch-case is exhaustive.\n        // eslint-disable-next-line  @typescript-eslint/no-unused-vars\n        const _: never = this.socket;\n      }\n    }\n  }\n\n  /**\n   * Close the WebSocket and never reconnect.\n   * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n   */\n  async stop(): Promise<void> {\n    switch (this.socket.state) {\n      case \"stopped\":\n        return;\n      case \"connecting\":\n      case \"ready\":\n        this.socket.ws.close();\n        this.socket = {\n          state: \"stopping\",\n          promisePair: promisePair(),\n        };\n        await this.socket.promisePair.promise;\n        return;\n      case \"closing\":\n        // We're already closing the WebSocket, so just upgrade the state\n        // to \"stopping\" so we don't reconnect.\n        this.socket = {\n          state: \"stopping\",\n          promisePair: promisePair(),\n        };\n        await this.socket.promisePair.promise;\n        return;\n      case \"disconnected\":\n        // We're disconnected so switch the state to \"stopped\" so the reconnect\n        // timeout doesn't create a new WebSocket.\n        this.socket = { state: \"stopped\" };\n        return;\n      case \"stopping\":\n        await this.socket.promisePair.promise;\n        return;\n      default: {\n        // Enforce that the switch-case is exhaustive.\n        // eslint-disable-next-line  @typescript-eslint/no-unused-vars\n        const _: never = this.socket;\n      }\n    }\n  }\n\n  private nextBackoff(): number {\n    const baseBackoff = this.initialBackoff * Math.pow(2, this.retries);\n    this.retries += 1;\n    const actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n    const jitter = actualBackoff * (Math.random() - 0.5);\n    return actualBackoff + jitter;\n  }\n}\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "import { version } from \"../../index.js\";\nimport { Value } from \"@convex-dev/common\";\nimport { LocalSyncState } from \"./local_state.js\";\nimport { MutationManager } from \"./mutation_manager.js\";\nimport {\n  OptimisticQueryResults,\n  OptimisticLocalStore,\n  OptimisticUpdate,\n  QueryResultsMap,\n} from \"./optimistic_query_set.js\";\nimport { ServerMessage, QueryId, MutationId } from \"./protocol.js\";\nimport { QueryResult, RemoteQuerySet } from \"./remote_query_set.js\";\nimport { QueryToken, serializePathAndArgs } from \"./udf_path_utils.js\";\nimport { WebSocketManager } from \"./web_socket_manager.js\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GenericAPI } from \"../api.js\";\nimport { logFatalError } from \"../logging.js\";\n\n/**\n * Options for {@link InternalConvexClient}.\n *\n * @public\n */\nexport type ClientOptions = {\n  /**\n   * Whether to prompt the user that have unsaved changes pending\n   * when navigating away or closing a web page with pending Convex mutations.\n   * This is only possible when the `window` object exists, i.e. in a browser.\n   * The default value is `true`.\n   */\n  unsavedChangesWarning?: boolean;\n  /**\n   * Specifies an alternate\n   * [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket)\n   * constructor to use for client communication with the Convex cloud.\n   * The default behavior is to use `WebSocket` from the global environment.\n   */\n  webSocketConstructor?: typeof WebSocket;\n};\n\nconst DEFAULT_OPTIONS = {\n  unsavedChangesWarning: true,\n};\n\n/**\n * Low-level client for directly integrating state management libraries\n * with Convex.\n *\n * Most developers should use higher level clients, like\n * the {@link ConvexHttpClient} or the React hook based {@link react.ConvexReactClient}.\n *\n * @public\n */\nexport class InternalConvexClient {\n  private readonly state: LocalSyncState;\n  private readonly mutationManager: MutationManager;\n  private readonly webSocketManager: WebSocketManager;\n  private remoteQuerySet: RemoteQuerySet;\n  private readonly optimisticQueryResults: OptimisticQueryResults;\n  private readonly onTransition: (updatedQueries: QueryToken[]) => void;\n  private nextMutationId: MutationId;\n  private readonly sessionId: string;\n  private connectionCount: number;\n\n  /**\n   * @param address - The url of your Convex deployment, typically from the\n   * `origin` property of a convex.json config file.\n   * E.g. `https://small-mouse-123.convex.cloud`.\n   * @param onTransition - A callback receiving an array of serialized queries,\n   * called each time updated query results are received from the Convex cloud.\n   * @param options - See {@link ClientOptions} for a full description.\n   */\n  constructor(\n    address: string,\n    onTransition: (updatedQueries: QueryToken[]) => void,\n    options?: ClientOptions\n  ) {\n    options = { ...DEFAULT_OPTIONS, ...options };\n    let webSocketConstructor = options.webSocketConstructor;\n    if (!webSocketConstructor && typeof WebSocket === \"undefined\") {\n      throw new Error(\n        \"No WebSocket global variable defined! To use Convex in an environment without WebSocket try the HTTP client: https://docs.convex.dev/api/classes/browser.ConvexHttpClient\"\n      );\n    }\n    webSocketConstructor = webSocketConstructor || WebSocket;\n\n    // Substitute http(s) with ws(s)\n    const i = address.search(\"://\");\n    if (i == -1) {\n      throw new Error(\"Provided address was not an absolute URL.\");\n    }\n    const origin = address.substring(i + 3); // move past the double slash\n    const protocol = address.substring(0, i);\n    let wsProtocol;\n    if (protocol === \"http\") {\n      wsProtocol = \"ws\";\n    } else if (protocol === \"https\") {\n      wsProtocol = \"wss\";\n    } else {\n      throw new Error(`Unknown parent protocol ${protocol}`);\n    }\n    const wsUri = `${wsProtocol}://${origin}/api/${version}/sync`;\n\n    this.state = new LocalSyncState();\n    this.remoteQuerySet = new RemoteQuerySet(queryId =>\n      this.state.queryPath(queryId)\n    );\n    this.mutationManager = new MutationManager();\n    this.optimisticQueryResults = new OptimisticQueryResults();\n    this.onTransition = onTransition;\n    this.nextMutationId = 0;\n    this.sessionId = uuidv4();\n    this.connectionCount = 0;\n\n    const { unsavedChangesWarning } = options;\n    if (typeof window === \"undefined\" && unsavedChangesWarning) {\n      throw new Error(\n        \"unsavedChangesWarning enabled, but no window object found! Navigating away from the page could cause in-flight mutations to be dropped. Pass {unsavedChangesWarning: false} in Convex client options to disable this feature.\"\n      );\n    }\n\n    // Listen for tab close events and notify the user on unsaved changes.\n    unsavedChangesWarning &&\n      window.addEventListener(\"beforeunload\", e => {\n        if (this.mutationManager.hasUncommittedMutations()) {\n          // There are 3 different ways to trigger this pop up so just try all of\n          // them.\n\n          e.preventDefault();\n          // This confirmation message doesn't actually appear in most modern\n          // browsers but we tried.\n          const confirmationMessage =\n            \"Are you sure you want to leave? Your changes may not be saved.\";\n          (e || window.event).returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      });\n\n    this.webSocketManager = new WebSocketManager(\n      wsUri,\n      () => {\n        // We have a new WebSocket!\n\n        this.webSocketManager.sendMessage({\n          type: \"Connect\",\n          sessionId: this.sessionId,\n          connectionCount: this.connectionCount,\n        });\n        this.connectionCount += 1;\n\n        // Throw out our remote query, reissue queries\n        // and outstanding mutations, and reauthenticate.\n        this.remoteQuerySet = new RemoteQuerySet(queryId =>\n          this.state.queryPath(queryId)\n        );\n        const [querySetModification, authModification] = this.state.restart();\n        if (authModification) {\n          this.webSocketManager.sendMessage(authModification);\n        }\n        this.webSocketManager.sendMessage(querySetModification);\n        for (const message of this.mutationManager.restart()) {\n          this.webSocketManager.sendMessage(message);\n        }\n      },\n      (serverMessage: ServerMessage) => {\n        if (serverMessage.type == \"Transition\") {\n          this.remoteQuerySet.transition(serverMessage);\n          const completedMutations =\n            this.mutationManager.removeCompletedMutations(\n              this.remoteQuerySet.timestamp()\n            );\n          this.notifyOnQueryResultChanges(completedMutations);\n        } else if (serverMessage.type == \"MutationResponse\") {\n          const completedMutationId =\n            this.mutationManager.onResponse(serverMessage);\n          if (completedMutationId) {\n            this.notifyOnQueryResultChanges(new Set([completedMutationId]));\n          }\n        } else if (serverMessage.type == \"FatalError\") {\n          const error = logFatalError(serverMessage.error);\n          this.webSocketManager.stop();\n          throw error;\n        }\n      },\n      webSocketConstructor\n    );\n  }\n\n  /**\n   * Compute the current query results based on the remoteQuerySet and the\n   * current optimistic updates and call `onTransition` for all the changed\n   * queries.\n   *\n   * @param completedMutations - A set of mutation IDs whose optimistic updates\n   * are no longer needed.\n   */\n  private notifyOnQueryResultChanges(completedMutations: Set<MutationId>) {\n    const remoteQueryResults: Map<QueryId, QueryResult> =\n      this.remoteQuerySet.remoteQueryResults();\n    const queryTokenToValue: QueryResultsMap = new Map();\n    for (const [queryId, result] of remoteQueryResults) {\n      const queryToken = this.state.queryToken(queryId);\n      // It's possible that we've already unsubscribed to this query but\n      // the server hasn't learned about that yet. If so, ignore this one.\n\n      if (queryToken !== null) {\n        const query = {\n          result,\n          udfPath: this.state.queryPath(queryId)!,\n          args: this.state.queryArgs(queryId)!,\n        };\n        queryTokenToValue.set(queryToken, query);\n      }\n    }\n\n    this.onTransition(\n      this.optimisticQueryResults.ingestQueryResultsFromServer(\n        queryTokenToValue,\n        completedMutations\n      )\n    );\n  }\n\n  setAuth(value: string) {\n    const message = this.state.setAuth(value);\n    this.webSocketManager.sendMessage(message);\n  }\n\n  /** @internal */\n  setAdminAuth(value: string) {\n    const message = this.state.setAdminAuth(value);\n    this.webSocketManager.sendMessage(message);\n  }\n\n  clearAuth() {\n    const message = this.state.clearAuth();\n    this.webSocketManager.sendMessage(message);\n  }\n\n  subscribe(\n    udfPath: string,\n    args: any[]\n  ): { queryToken: QueryToken; unsubscribe: () => void } {\n    const { modification, queryToken, unsubscribe } = this.state.subscribe(\n      udfPath,\n      args\n    );\n    if (modification !== null) {\n      this.webSocketManager.sendMessage(modification);\n    }\n    // TODO: Use FinalizationRegistry?\n    return {\n      queryToken,\n      unsubscribe: () => {\n        const modification = unsubscribe();\n        if (modification) {\n          this.webSocketManager.sendMessage(modification);\n        }\n      },\n    };\n  }\n\n  /**\n   * A query result based only on the current, local state.\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   */\n  localQueryResult(udfPath: string, args: any[]): Value | undefined {\n    const queryToken = serializePathAndArgs(udfPath, args);\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n\n  async mutate<Args extends any[]>(\n    udfPath: string,\n    args: Args,\n    optimisticUpdate: OptimisticUpdate<GenericAPI, Args> | null = null\n  ): Promise<any> {\n    const mutationId = this.nextMutationId;\n    this.nextMutationId++;\n\n    if (optimisticUpdate !== null) {\n      const wrappedUpdate = (localQueryStore: OptimisticLocalStore) => {\n        optimisticUpdate(localQueryStore, ...args);\n      };\n      const changedQueries = this.optimisticQueryResults.applyOptimisticUpdate(\n        wrappedUpdate,\n        mutationId\n      );\n      this.onTransition(changedQueries);\n    }\n\n    const { message, result } = this.mutationManager.request(\n      udfPath,\n      args,\n      mutationId\n    );\n    this.webSocketManager.sendMessage(message);\n    return result;\n  }\n\n  async close(): Promise<void> {\n    return this.webSocketManager.stop();\n  }\n}\n", "import {\n  convexToJson,\n  jsonToConvex,\n  version,\n  STATUS_CODE_UDF_FAILED,\n} from \"@convex-dev/common\";\nimport { createError, logToConsole } from \"./logging.js\";\n\n/** Isomorphic `fetch` for Node.js and browser usage. */\nconst hasFetch =\n  typeof window !== \"undefined\" && typeof window.fetch !== \"undefined\";\ntype WindowFetch = typeof window.fetch;\nconst fetch: WindowFetch = hasFetch\n  ? window.fetch\n  : (...args) =>\n      import(\"node-fetch\").then(({ default: fetch }) =>\n        (fetch as unknown as WindowFetch)(...args)\n      );\n\n// TODO Typedoc doesn't generate documentation for the comment below perhaps\n// because it's a callable interface.\n/**\n * An interface to execute a Convex query function on the server.\n *\n * @public\n */\nexport interface Query<F extends (...args: any[]) => Promise<any>> {\n  /**\n   * Execute the query on the server, returning a `Promise` of the return value.\n   *\n   * @param args - Arguments for the query.\n   * @returns The result of the query.\n   */\n  (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>>;\n}\n\n// TODO Typedoc doesn't generate documentation for the comment below perhaps\n// because it's a callable interface.\n/**\n * An interface to execute a Convex mutation function on the server.\n *\n * @public\n */\nexport interface Mutation<F extends (...args: any[]) => Promise<any>> {\n  /**\n   * Execute the mutation on the server, returning a `Promise` of its return value.\n   *\n   * @param args - Arguments for the mutation.\n   * @returns The return value of the server-side function call.\n   */\n  (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>>;\n}\n\n/**\n * A Convex client that runs queries and mutations over HTTP.\n *\n * This is appropriate for server-side code (like Netlify Lambdas) or non-reactive\n * webapps.\n *\n * If you're building a React app, consider using\n * {@link react.ConvexReactClient} instead.\n *\n *\n * @public\n */\nexport class ConvexHttpClient {\n  private readonly address: string;\n  private auth?: string;\n  constructor(address: string) {\n    this.address = `${address}/api/${version}`;\n  }\n\n  /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */\n  backendUrl(): string {\n    return this.address;\n  }\n\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */\n  setAuth(value: string) {\n    this.auth = value;\n  }\n\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.auth = undefined;\n  }\n\n  /**\n   * Construct a new {@link Query}.\n   *\n   * @param name - The name of the query function.\n   * @returns The {@link Query} object with that name.\n   */\n  query<F extends (...args: any[]) => Promise<any>>(name: string): Query<F> {\n    return async (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>> => {\n      // Interpret the arguments as a Convex array, and then serialize\n      // it to JSON.\n      const argsJSON = JSON.stringify(convexToJson(args));\n      const argsComponent = encodeURIComponent(argsJSON);\n      const url = `${this.address}/udf?path=${name}&args=${argsComponent}`;\n      const headers: Record<string, string> = this.auth\n        ? { Authorization: `Bearer ${this.auth}` }\n        : {};\n\n      const response = await fetch(url, {\n        credentials: \"include\",\n        headers: headers,\n      });\n      if (!response.ok && response.status != STATUS_CODE_UDF_FAILED) {\n        throw new Error(await response.text());\n      }\n      const respJSON = await response.json();\n\n      const value = jsonToConvex(respJSON.value);\n      for (const line of respJSON.logs) {\n        logToConsole(\"info\", \"query\", name, line);\n      }\n      if (!respJSON.success) {\n        throw createError(\"query\", name, value as string);\n      }\n      return value as ReturnType<F>;\n    };\n  }\n\n  /**\n   * Construct a new {@link Mutation}.\n   *\n   * @param name - The name of the mutation function.\n   * @returns The {@link Mutation} object with that name.\n   */\n  mutation<F extends (...args: any[]) => Promise<any>>(\n    name: string\n  ): Mutation<F> {\n    return async (...args: Parameters<F>): Promise<Awaited<ReturnType<F>>> => {\n      // Interpret the arguments as a Convex array and then serialize to JSON.\n      const body = JSON.stringify({\n        path: name,\n        args: convexToJson(args),\n        tokens: [],\n      });\n      const headers: Record<string, string> = {\n        \"Content-Type\": \"application/json\",\n      };\n      if (this.auth) {\n        headers[\"Authorization\"] = `Bearer ${this.auth}`;\n      }\n      const response = await fetch(`${this.address}/udf`, {\n        body,\n        method: \"POST\",\n        headers: headers,\n        credentials: \"include\",\n      });\n      if (!response.ok && response.status != STATUS_CODE_UDF_FAILED) {\n        throw new Error(await response.text());\n      }\n      const respJSON = await response.json();\n      const value = jsonToConvex(respJSON.value);\n      for (const line of respJSON.logs) {\n        logToConsole(\"info\", \"mutation\", name, line);\n      }\n      if (!respJSON.success) {\n        throw createError(\"mutation\", name, value as string);\n      }\n      return value as ReturnType<F>;\n    };\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
