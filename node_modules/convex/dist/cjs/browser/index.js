"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConvexHttpClient = exports.InternalConvexClient = void 0;
/**
 * Tools for accessing Convex in the browser.
 *
 * **If you are using React, use the {@link react} module instead.**
 *
 * ## Usage
 *
 * Create a {@link ConvexHttpClient} to connect to the Convex Cloud.
 *
 * ```typescript
 * import { ConvexHttpClient } from "convex/browser";
 * import convexConfig from "../convex.json";
 * const convex = new ConvexHttpClient(convexConfig.origin):
 * ```
 *
 * @module
 */
var client_js_1 = require("./sync/client.js");
Object.defineProperty(exports, "InternalConvexClient", { enumerable: true, get: function () { return client_js_1.InternalConvexClient; } });
var http_client_js_1 = require("./http_client.js");
Object.defineProperty(exports, "ConvexHttpClient", { enumerable: true, get: function () { return http_client_js_1.ConvexHttpClient; } });
__exportStar(require("./api.js"), exports);
//# sourceMappingURL=index.js.map