import { Value } from "@convex-dev/common";
import Long from "long";
import { QueryId, Transition } from "./protocol.js";
/**
 * The result of running a query function on the server.
 *
 * If the function hit an exception it will have an `errorMessage`. Otherwise
 * it will produce a `Value`.
 *
 * @public
 */
export declare type QueryResult = {
    success: true;
    value: Value;
} | {
    success: false;
    errorMessage: string;
};
/**
 * A represention of the query results we've received on the current WebSocket
 * connection.
 */
export declare class RemoteQuerySet {
    private version;
    private readonly remoteQuerySet;
    private readonly queryPath;
    constructor(queryPath: (queryId: QueryId) => string | null);
    transition(transition: Transition): void;
    remoteQueryResults(): Map<QueryId, QueryResult>;
    timestamp(): Long;
}
//# sourceMappingURL=remote_query_set.d.ts.map