#!/usr/bin/env node
import { Command } from "commander";
import { init } from "./init.js";
import { push } from "./push.js";
import { dashboard } from "./dashboard.js";
import { deactivate } from "./deactivate.js";
import { docs } from "./docs.js";
import { version } from "../index.js";
import { auth } from "./auth.js";
import { codegen } from "./codegen.js";
import { listDeployments } from "./list_deployments.js";
import { reinit } from "./reinit.js";
import { update } from "./update.js";
import { typecheck } from "./typecheck.js";
import { login } from "./login.js";
import chalk from "chalk";
import * as Sentry from "@sentry/node";
import "@sentry/tracing";
import { flushAndExit } from "./utils.js";
import stripAnsi from "strip-ansi";
import { productionProvisionHost, provisionHost } from "./config.js";
// If you want to use `@sentry/tracing` in your project directly, use a named import instead:
// import * as SentryTracing from "@sentry/tracing"
// Unused named imports are not guaranteed to patch the global hub.
if (!process.env.CI && provisionHost == productionProvisionHost) {
    Sentry.init({
        dsn: "https://f9fa0306e3d540079cf40ce8c2ad9644@o1192621.ingest.sentry.io/6390839",
        release: "cli@" + version,
        tracesSampleRate: 0.2,
        beforeBreadcrumb: breadcrumb => {
            // Strip ANSI color codes from log lines that are sent as breadcrumbs.
            if (breadcrumb.message) {
                breadcrumb.message = stripAnsi(breadcrumb.message);
            }
            return breadcrumb;
        },
    });
}
const MINIMUM_MAJOR_VERSION = 14;
const nodeVersion = process.versions.node;
const majorVersion = parseInt(nodeVersion.split(".")[0], 10);
if (majorVersion < MINIMUM_MAJOR_VERSION) {
    console.log(chalk.red(`Your Node version ${nodeVersion} is too old. Convex requires at least Node v${MINIMUM_MAJOR_VERSION}.`));
    console.log(chalk.gray(`You can use ${chalk.bold("nvm")} (https://github.com/nvm-sh/nvm#installing-and-updating) to manage different versions of Node.`));
    console.log(chalk.gray("After installing `nvm`, install the latest version of Node with " +
        chalk.bold("`nvm install node`.")));
    console.log(chalk.gray("Then, activate the installed version in your terminal with " +
        chalk.bold("`nvm use`.")));
    flushAndExit(1);
}
if (process.platform === "win32") {
    console.log(chalk.red("The Convex CLI does not currently support Windows. Read the docs for more information: https://docs.convex.dev/understanding/beta-state#windows-development."));
}
const program = new Command();
program.name("convex");
program.description("The Convex deployment management CLI");
program.usage("command [options]");
program.addCommand(init);
program.addCommand(push);
program.addCommand(dashboard);
program.addCommand(docs);
program.addCommand(listDeployments);
program.addCommand(reinit);
program.addCommand(deactivate);
program.addCommand(auth);
program.addCommand(codegen);
program.addCommand(update);
program.addCommand(typecheck);
program.addCommand(login);
program.version(version);
program.parseAsync(process.argv);
//# sourceMappingURL=index.js.map