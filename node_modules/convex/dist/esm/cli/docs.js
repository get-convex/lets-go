import axios from "axios";
import { Command } from "commander";
import open from "open";
import { configName, configFilepath, parseConfig, provisionHost, } from "./config.js";
import { version } from "../index.js";
import chalk from "chalk";
import fs from "fs/promises";
import { deprecationCheck, flushAndExit } from "./utils.js";
function openDocs(toOpen, cookie) {
    let docsUrl = "https://docs.convex.dev";
    if (cookie !== undefined) {
        docsUrl += "/?t=" + cookie;
    }
    if (toOpen) {
        open(docsUrl);
        console.log(chalk.green("Docs have launched! Check your browser."));
    }
    else {
        console.log(chalk.green(`Find Convex docs here: ${docsUrl}`));
    }
}
export const docs = new Command("docs")
    .description("Launch Convex docs")
    .option("--deployment-type <type>", "Type of deployment to open the docs for (`convex.<type>.json`). Defaults to `convex.json`")
    .option("--no-open", "Print docs URL instead of opening it in your browser")
    .action(async (options) => {
    const configFn = configName(options.deploymentType);
    const configPath = await configFilepath(configFn);
    let localConfig;
    try {
        localConfig = parseConfig(JSON.parse(await fs.readFile(configPath, { encoding: "utf-8" })));
    }
    catch (err) {
        openDocs(options.open);
        return await flushAndExit(0);
    }
    const getCookieUrl = `${provisionHost}/api/${version}/get_cookie/${localConfig.instanceName}`;
    const client = axios.create();
    client
        .get(getCookieUrl)
        .then(res => {
        deprecationCheck(res);
        openDocs(options.open, res.data.cookie);
    })
        .catch(() => openDocs(options.open));
});
//# sourceMappingURL=docs.js.map