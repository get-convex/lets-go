import { Command } from "commander";
import chalk from "chalk";
import { mustReadEnv, readInstanceConfig } from "./config.js";
import open from "open";
import axios from "axios";
import { version } from "../index.js";
import { flushAndExit, printServerErr } from "./utils.js";
/** Pull the local config and overwrite the remote one. */
export const dashboard = new Command("dashboard")
    .description("Log into Convex with the local `.env.local` file and open the dashboard in the browser")
    .option("--no-open", "Don't automatically open the dashboard in the default browser")
    .option("--deployment-type <type>", "Type of deployment to show dashboard for (`convex.<type>.json`). Defaults to `convex.json`")
    .action(async (options) => {
    const adminKey = (await mustReadEnv(options.deploymentType)).adminKey;
    const { instanceConfig } = await readInstanceConfig(options.deploymentType);
    const loginUrl = await dashboardLogin(instanceConfig.origin, adminKey);
    if (options.open) {
        console.log(chalk.gray(`Opening ${loginUrl} in the default browser...`));
        await open(loginUrl);
    }
    else {
        console.log(loginUrl);
    }
});
async function dashboardLogin(instanceOrigin, adminKey) {
    try {
        return (await axios.post(`${instanceOrigin}/api/${version}/one_time_login_url`, {
            version,
            adminKey,
        })).data.loginUrl;
    }
    catch (err) {
        console.error(chalk.red("Error: Unable to login to dashboard at ", instanceOrigin));
        printServerErr(err);
        return await flushAndExit(1, err);
    }
}
//# sourceMappingURL=dashboard.js.map